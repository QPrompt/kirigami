import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -noinstantiate -notrelocatable org.kde.kirigami 2.20 lib/qml'
//
// qmlplugindump is deprecated! You should use qmltyperegistrar instead.

Module {
    Component {
        name: "ApplicationHeaderStyle"
        prototype: "QObject"
        exports: ["org.kde.kirigami/ApplicationHeaderStyle 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Auto": 0,
                "Breadcrumb": 1,
                "Titles": 2,
                "ToolBar": 3,
                "None": 4
            }
        }
        Enum {
            name: "NavigationButton"
            values: {
                "NoNavigationButtons": 0,
                "ShowBackButton": 1,
                "ShowForwardButton": 2
            }
        }
    }
    Component {
        name: "BorderGroup"
        prototype: "QObject"
        exports: ["org.kde.kirigami/BorderGroup 2.12"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "width"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Signal { name: "changed" }
    }
    Component {
        name: "ColorUtils"
        prototype: "QObject"
        exports: ["org.kde.kirigami/ColorUtils 2.12"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Brightness"
            values: {
                "Dark": 0,
                "Light": 1
            }
        }
        Method {
            name: "brightnessForColor"
            type: "ColorUtils::Brightness"
            Parameter { name: "color"; type: "QColor" }
        }
        Method {
            name: "grayForColor"
            type: "double"
            Parameter { name: "color"; type: "QColor" }
        }
        Method {
            name: "alphaBlend"
            type: "QColor"
            Parameter { name: "foreground"; type: "QColor" }
            Parameter { name: "background"; type: "QColor" }
        }
        Method {
            name: "linearInterpolation"
            type: "QColor"
            Parameter { name: "one"; type: "QColor" }
            Parameter { name: "two"; type: "QColor" }
            Parameter { name: "balance"; type: "double" }
        }
        Method {
            name: "adjustColor"
            type: "QColor"
            Parameter { name: "color"; type: "QColor" }
            Parameter { name: "adjustments"; type: "QJSValue" }
        }
        Method {
            name: "scaleColor"
            type: "QColor"
            Parameter { name: "color"; type: "QColor" }
            Parameter { name: "adjustments"; type: "QJSValue" }
        }
        Method {
            name: "tintWithAlpha"
            type: "QColor"
            Parameter { name: "targetColor"; type: "QColor" }
            Parameter { name: "tintColor"; type: "QColor" }
            Parameter { name: "alpha"; type: "double" }
        }
        Method {
            name: "chroma"
            type: "double"
            Parameter { name: "color"; type: "QColor" }
        }
    }
    Component {
        name: "ColumnView"
        defaultProperty: "contentData"
        prototype: "QQuickItem"
        exports: ["org.kde.kirigami/ColumnView 2.7"]
        exportMetaObjectRevisions: [0]
        attachedType: "ColumnViewAttached"
        Enum {
            name: "ColumnResizeMode"
            values: {
                "FixedColumns": 0,
                "DynamicColumns": 1,
                "SingleColumn": 2
            }
        }
        Property { name: "columnResizeMode"; type: "ColumnView::ColumnResizeMode" }
        Property { name: "columnWidth"; type: "double" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "currentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "contentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "contentX"; type: "double" }
        Property { name: "contentWidth"; type: "double"; isReadonly: true }
        Property { name: "topPadding"; type: "double" }
        Property { name: "bottomPadding"; type: "double" }
        Property { name: "scrollDuration"; type: "int" }
        Property { name: "separatorVisible"; type: "bool" }
        Property { name: "visibleItems"; type: "QList<QObject*>"; isReadonly: true }
        Property { name: "firstVisibleItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "lastVisibleItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "dragging"; type: "bool"; isReadonly: true }
        Property { name: "moving"; type: "bool"; isReadonly: true }
        Property { name: "interactive"; type: "bool" }
        Property { name: "acceptsMouse"; type: "bool" }
        Property { name: "contentChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "contentData"; type: "QObject"; isList: true; isReadonly: true }
        Signal {
            name: "itemInserted"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "itemRemoved"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "addItem"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "insertItem"
            Parameter { name: "pos"; type: "int" }
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "replaceItem"
            Parameter { name: "pos"; type: "int" }
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "moveItem"
            Parameter { name: "from"; type: "int" }
            Parameter { name: "to"; type: "int" }
        }
        Method {
            name: "pop"
            type: "QQuickItem*"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method { name: "clear" }
        Method {
            name: "containsItem"
            type: "bool"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "itemAt"
            type: "QQuickItem*"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method {
            name: "removeItem"
            type: "QQuickItem*"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "removeItem"
            type: "QQuickItem*"
            Parameter { name: "index"; type: "int" }
        }
    }
    Component {
        name: "ColumnViewAttached"
        prototype: "QObject"
        Property { name: "index"; type: "int" }
        Property { name: "fillWidth"; type: "bool" }
        Property { name: "reservedSpace"; type: "double" }
        Property { name: "preventStealing"; type: "bool" }
        Property { name: "pinned"; type: "bool" }
        Property { name: "view"; type: "ColumnView"; isReadonly: true; isPointer: true }
        Property { name: "inViewport"; type: "bool"; isReadonly: true }
        Signal {
            name: "scrollIntention"
            Parameter { name: "event"; type: "ScrollIntentionEvent"; isPointer: true }
        }
    }
    Component {
        name: "CopyHelperPrivate"
        prototype: "QObject"
        exports: ["org.kde.kirigami.private/CopyHelperPrivate 2.6"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Method {
            name: "copyTextToClipboard"
            Parameter { name: "text"; type: "string" }
        }
    }
    Component {
        name: "CornersGroup"
        prototype: "QObject"
        exports: ["org.kde.kirigami/CornersGroup 2.12"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "topLeftRadius"; type: "double" }
        Property { name: "topRightRadius"; type: "double" }
        Property { name: "bottomLeftRadius"; type: "double" }
        Property { name: "bottomRightRadius"; type: "double" }
        Signal { name: "changed" }
    }
    Component {
        name: "DelegateRecycler"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["org.kde.kirigami/DelegateRecycler 2.4"]
        exportMetaObjectRevisions: [0]
        attachedType: "DelegateRecyclerAttached"
        Property { name: "sourceComponent"; type: "QQmlComponent"; isPointer: true }
    }
    Component {
        name: "DelegateRecyclerAttached"
        prototype: "QObject"
        Signal { name: "pooled" }
        Signal { name: "reused" }
    }
    Component {
        name: "DisplayHint"
        prototype: "QObject"
        exports: ["org.kde.kirigami/DisplayHint 2.14"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Hint"
            values: {
                "NoPreference": 0,
                "IconOnly": 1,
                "KeepVisible": 2,
                "AlwaysHide": 4,
                "HideChildIndicator": 8
            }
        }
        Enum {
            name: "DisplayHints"
            values: {
                "NoPreference": 0,
                "IconOnly": 1,
                "KeepVisible": 2,
                "AlwaysHide": 4,
                "HideChildIndicator": 8
            }
        }
        Method {
            name: "displayHintSet"
            type: "bool"
            Parameter { name: "values"; type: "DisplayHints" }
            Parameter { name: "hint"; type: "Hint" }
        }
        Method {
            name: "displayHintSet"
            type: "bool"
            Parameter { name: "object"; type: "QObject"; isPointer: true }
            Parameter { name: "hint"; type: "Hint" }
        }
    }
    Component {
        name: "FormLayoutAttached"
        prototype: "QObject"
        exports: ["org.kde.kirigami/FormData 2.3"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "label"; type: "string" }
        Property { name: "labelAlignment"; type: "int" }
        Property { name: "isSection"; type: "bool" }
        Property { name: "buddyFor"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "Icon"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["org.kde.kirigami/Icon 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Ready": 1,
                "Loading": 2,
                "Error": 3
            }
        }
        Property { name: "source"; type: "QVariant" }
        Property { name: "fallback"; type: "string" }
        Property { name: "placeholder"; type: "string" }
        Property { name: "active"; type: "bool" }
        Property { name: "valid"; type: "bool"; isReadonly: true }
        Property { name: "selected"; type: "bool" }
        Property { name: "isMask"; type: "bool" }
        Property { name: "color"; type: "QColor" }
        Property { name: "status"; type: "Icon::Status"; isReadonly: true }
        Property { name: "paintedWidth"; type: "double"; isReadonly: true }
        Property { name: "paintedHeight"; type: "double"; isReadonly: true }
        Property { name: "animated"; type: "bool" }
        Property { name: "roundToIconSize"; type: "bool" }
        Signal {
            name: "fallbackChanged"
            Parameter { name: "fallback"; type: "string" }
        }
        Signal {
            name: "placeholderChanged"
            Parameter { name: "placeholder"; type: "string" }
        }
        Signal { name: "paintedAreaChanged" }
    }
    Component {
        name: "ImageColors"
        prototype: "QObject"
        exports: ["org.kde.kirigami/ImageColors 2.13"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QVariant" }
        Property { name: "palette"; type: "QVariantList"; isReadonly: true }
        Property { name: "paletteBrightness"; type: "ColorUtils::Brightness"; isReadonly: true }
        Property { name: "average"; type: "QColor"; isReadonly: true }
        Property { name: "dominant"; type: "QColor"; isReadonly: true }
        Property { name: "dominantContrast"; type: "QColor"; isReadonly: true }
        Property { name: "highlight"; type: "QColor"; isReadonly: true }
        Property { name: "foreground"; type: "QColor"; isReadonly: true }
        Property { name: "background"; type: "QColor"; isReadonly: true }
        Property { name: "closestToWhite"; type: "QColor"; isReadonly: true }
        Property { name: "closestToBlack"; type: "QColor"; isReadonly: true }
        Property { name: "fallbackPalette"; type: "QVariantList" }
        Property { name: "fallbackPaletteBrightness"; type: "ColorUtils::Brightness" }
        Property { name: "fallbackAverage"; type: "QColor" }
        Property { name: "fallbackDominant"; type: "QColor" }
        Property { name: "fallbackDominantContrasting"; type: "QColor" }
        Property { name: "fallbackHighlight"; type: "QColor" }
        Property { name: "fallbackForeground"; type: "QColor" }
        Property { name: "fallbackBackground"; type: "QColor" }
        Method { name: "update" }
    }
    Component {
        name: "InputMethod"
        prototype: "QObject"
        exports: ["org.kde.kirigami/InputMethod 2.19"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "available"; type: "bool"; isReadonly: true }
        Property { name: "enabled"; type: "bool"; isReadonly: true }
        Property { name: "active"; type: "bool"; isReadonly: true }
        Property { name: "visible"; type: "bool"; isReadonly: true }
        Property { name: "willShowOnActive"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "Kirigami::BasicThemeDefinition"
        prototype: "QObject"
        exports: [
            "org.kde.kirigami/BasicThemeDefinition 2.16",
            "org.kde.kirigami/Theme 2.0"
        ]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0, 0]
        Property { name: "textColor"; type: "QColor" }
        Property { name: "disabledTextColor"; type: "QColor" }
        Property { name: "highlightColor"; type: "QColor" }
        Property { name: "highlightedTextColor"; type: "QColor" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "alternateBackgroundColor"; type: "QColor" }
        Property { name: "focusColor"; type: "QColor" }
        Property { name: "hoverColor"; type: "QColor" }
        Property { name: "activeTextColor"; type: "QColor" }
        Property { name: "activeBackgroundColor"; type: "QColor" }
        Property { name: "linkColor"; type: "QColor" }
        Property { name: "linkBackgroundColor"; type: "QColor" }
        Property { name: "visitedLinkColor"; type: "QColor" }
        Property { name: "visitedLinkBackgroundColor"; type: "QColor" }
        Property { name: "negativeTextColor"; type: "QColor" }
        Property { name: "negativeBackgroundColor"; type: "QColor" }
        Property { name: "neutralTextColor"; type: "QColor" }
        Property { name: "neutralBackgroundColor"; type: "QColor" }
        Property { name: "positiveTextColor"; type: "QColor" }
        Property { name: "positiveBackgroundColor"; type: "QColor" }
        Property { name: "buttonTextColor"; type: "QColor" }
        Property { name: "buttonBackgroundColor"; type: "QColor" }
        Property { name: "buttonAlternateBackgroundColor"; type: "QColor" }
        Property { name: "buttonHoverColor"; type: "QColor" }
        Property { name: "buttonFocusColor"; type: "QColor" }
        Property { name: "viewTextColor"; type: "QColor" }
        Property { name: "viewBackgroundColor"; type: "QColor" }
        Property { name: "viewAlternateBackgroundColor"; type: "QColor" }
        Property { name: "viewHoverColor"; type: "QColor" }
        Property { name: "viewFocusColor"; type: "QColor" }
        Property { name: "selectionTextColor"; type: "QColor" }
        Property { name: "selectionBackgroundColor"; type: "QColor" }
        Property { name: "selectionAlternateBackgroundColor"; type: "QColor" }
        Property { name: "selectionHoverColor"; type: "QColor" }
        Property { name: "selectionFocusColor"; type: "QColor" }
        Property { name: "tooltipTextColor"; type: "QColor" }
        Property { name: "tooltipBackgroundColor"; type: "QColor" }
        Property { name: "tooltipAlternateBackgroundColor"; type: "QColor" }
        Property { name: "tooltipHoverColor"; type: "QColor" }
        Property { name: "tooltipFocusColor"; type: "QColor" }
        Property { name: "complementaryTextColor"; type: "QColor" }
        Property { name: "complementaryBackgroundColor"; type: "QColor" }
        Property { name: "complementaryAlternateBackgroundColor"; type: "QColor" }
        Property { name: "complementaryHoverColor"; type: "QColor" }
        Property { name: "complementaryFocusColor"; type: "QColor" }
        Property { name: "headerTextColor"; type: "QColor" }
        Property { name: "headerBackgroundColor"; type: "QColor" }
        Property { name: "headerAlternateBackgroundColor"; type: "QColor" }
        Property { name: "headerHoverColor"; type: "QColor" }
        Property { name: "headerFocusColor"; type: "QColor" }
        Property { name: "defaultFont"; type: "QFont" }
        Property { name: "smallFont"; type: "QFont" }
        Signal { name: "changed" }
        Signal {
            name: "sync"
            Parameter { name: "object"; type: "QQuickItem"; isPointer: true }
        }
    }
    Component {
        name: "Kirigami::PlatformTheme"
        prototype: "QObject"
        exports: ["org.kde.kirigami/Theme 2.2"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ColorSet"
            values: {
                "View": 0,
                "Window": 1,
                "Button": 2,
                "Selection": 3,
                "Tooltip": 4,
                "Complementary": 5,
                "Header": 6,
                "ColorSetCount": 7
            }
        }
        Enum {
            name: "ColorGroup"
            values: {
                "Disabled": 1,
                "Active": 0,
                "Inactive": 2,
                "Normal": 0,
                "ColorGroupCount": 1
            }
        }
        Property { name: "colorSet"; type: "Kirigami::PlatformTheme::ColorSet" }
        Property { name: "colorGroup"; type: "Kirigami::PlatformTheme::ColorGroup" }
        Property { name: "inherit"; type: "bool" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "disabledTextColor"; type: "QColor" }
        Property { name: "highlightedTextColor"; type: "QColor" }
        Property { name: "activeTextColor"; type: "QColor" }
        Property { name: "linkColor"; type: "QColor" }
        Property { name: "visitedLinkColor"; type: "QColor" }
        Property { name: "negativeTextColor"; type: "QColor" }
        Property { name: "neutralTextColor"; type: "QColor" }
        Property { name: "positiveTextColor"; type: "QColor" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "alternateBackgroundColor"; type: "QColor" }
        Property { name: "highlightColor"; type: "QColor" }
        Property { name: "activeBackgroundColor"; type: "QColor" }
        Property { name: "linkBackgroundColor"; type: "QColor" }
        Property { name: "visitedLinkBackgroundColor"; type: "QColor" }
        Property { name: "negativeBackgroundColor"; type: "QColor" }
        Property { name: "neutralBackgroundColor"; type: "QColor" }
        Property { name: "positiveBackgroundColor"; type: "QColor" }
        Property { name: "focusColor"; type: "QColor" }
        Property { name: "hoverColor"; type: "QColor" }
        Property { name: "defaultFont"; type: "QFont"; isReadonly: true }
        Property { name: "smallFont"; type: "QFont"; isReadonly: true }
        Property { name: "palette"; type: "QPalette"; isReadonly: true }
        Signal { name: "colorsChanged" }
        Signal {
            name: "defaultFontChanged"
            Parameter { name: "font"; type: "QFont" }
        }
        Signal {
            name: "smallFontChanged"
            Parameter { name: "font"; type: "QFont" }
        }
        Signal {
            name: "colorSetChanged"
            Parameter { name: "colorSet"; type: "Kirigami::PlatformTheme::ColorSet" }
        }
        Signal {
            name: "colorGroupChanged"
            Parameter { name: "colorGroup"; type: "Kirigami::PlatformTheme::ColorGroup" }
        }
        Signal {
            name: "paletteChanged"
            Parameter { name: "pal"; type: "QPalette" }
        }
        Signal {
            name: "inheritChanged"
            Parameter { name: "inherit"; type: "bool" }
        }
        Method {
            name: "iconFromTheme"
            type: "QIcon"
            Parameter { name: "name"; type: "string" }
            Parameter { name: "customColor"; type: "QColor" }
        }
        Method {
            name: "iconFromTheme"
            type: "QIcon"
            Parameter { name: "name"; type: "string" }
        }
    }
    Component {
        name: "Kirigami::Units"
        prototype: "QObject"
        exports: ["org.kde.kirigami/Units 2.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "gridUnit"; type: "int"; isReadonly: true }
        Property { name: "iconSizes"; type: "Kirigami::IconSizes"; isReadonly: true; isPointer: true }
        Property { name: "smallSpacing"; type: "int"; isReadonly: true }
        Property { name: "mediumSpacing"; type: "int"; isReadonly: true }
        Property { name: "largeSpacing"; type: "int"; isReadonly: true }
        Property { name: "veryLongDuration"; type: "int"; isReadonly: true }
        Property { name: "longDuration"; type: "int"; isReadonly: true }
        Property { name: "shortDuration"; type: "int"; isReadonly: true }
        Property { name: "veryShortDuration"; type: "int"; isReadonly: true }
        Property { name: "humanMoment"; type: "int"; isReadonly: true }
        Property { name: "toolTipDelay"; type: "int"; isReadonly: true }
        Property { name: "maximumInteger"; type: "int"; isReadonly: true }
        Signal { name: "wheelScrollLinesChanged" }
    }
    Component {
        name: "KirigamiWheelEvent"
        prototype: "QObject"
        exports: ["org.kde.kirigami/WheelEvent 2.9"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "x"; type: "double"; isReadonly: true }
        Property { name: "y"; type: "double"; isReadonly: true }
        Property { name: "angleDelta"; type: "QPointF"; isReadonly: true }
        Property { name: "pixelDelta"; type: "QPointF"; isReadonly: true }
        Property { name: "buttons"; type: "int"; isReadonly: true }
        Property { name: "modifiers"; type: "int"; isReadonly: true }
        Property { name: "inverted"; type: "bool"; isReadonly: true }
        Property { name: "accepted"; type: "bool" }
    }
    Component {
        name: "MessageType"
        prototype: "QObject"
        exports: ["org.kde.kirigami/MessageType 2.4"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "Information": 0,
                "Positive": 1,
                "Warning": 2,
                "Error": 3
            }
        }
    }
    Component {
        name: "MnemonicAttached"
        prototype: "QObject"
        exports: ["org.kde.kirigami/MnemonicData 2.3"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "ControlType"
            values: {
                "ActionElement": 0,
                "DialogButton": 1,
                "MenuItem": 2,
                "FormLabel": 3,
                "SecondaryControl": 4
            }
        }
        Property { name: "label"; type: "string" }
        Property { name: "richTextLabel"; type: "string"; isReadonly: true }
        Property { name: "mnemonicLabel"; type: "string"; isReadonly: true }
        Property { name: "enabled"; type: "bool" }
        Property { name: "controlType"; type: "MnemonicAttached::ControlType" }
        Property { name: "sequence"; type: "QKeySequence"; isReadonly: true }
        Property { name: "active"; type: "bool" }
    }
    Component {
        name: "PagePool"
        prototype: "QObject"
        exports: ["org.kde.kirigami/PagePool 2.11"]
        exportMetaObjectRevisions: [0]
        Property { name: "lastLoadedUrl"; type: "QUrl"; isReadonly: true }
        Property { name: "lastLoadedItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QList<QQuickItem*>"; isReadonly: true }
        Property { name: "urls"; type: "QList<QUrl>"; isReadonly: true }
        Property { name: "cachePages"; type: "bool" }
        Method {
            name: "loadPage"
            type: "QQuickItem*"
            Parameter { name: "url"; type: "string" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "loadPage"
            type: "QQuickItem*"
            Parameter { name: "url"; type: "string" }
        }
        Method {
            name: "loadPageWithProperties"
            type: "QQuickItem*"
            Parameter { name: "url"; type: "string" }
            Parameter { name: "properties"; type: "QVariantMap" }
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "loadPageWithProperties"
            type: "QQuickItem*"
            Parameter { name: "url"; type: "string" }
            Parameter { name: "properties"; type: "QVariantMap" }
        }
        Method {
            name: "urlForPage"
            type: "QUrl"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "pageForUrl"
            type: "QQuickItem*"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method {
            name: "contains"
            type: "bool"
            Parameter { name: "page"; type: "QVariant" }
        }
        Method {
            name: "deletePage"
            Parameter { name: "page"; type: "QVariant" }
        }
        Method {
            name: "resolvedUrl"
            type: "QUrl"
            Parameter { name: "file"; type: "string" }
        }
        Method {
            name: "isLocalUrl"
            type: "bool"
            Parameter { name: "url"; type: "QUrl" }
        }
        Method { name: "clear" }
    }
    Component {
        name: "QQuickItem"
        defaultProperty: "data"
        prototype: "QObject"
        Enum {
            name: "Flags"
            values: {
                "ItemClipsChildrenToShape": 1,
                "ItemAcceptsInputMethod": 2,
                "ItemIsFocusScope": 4,
                "ItemHasContents": 8,
                "ItemAcceptsDrops": 16,
                "ItemIsViewport": 32,
                "ItemObservesViewport": 64
            }
        }
        Enum {
            name: "ItemChange"
            values: {
                "ItemChildAddedChange": 0,
                "ItemChildRemovedChange": 1,
                "ItemSceneChange": 2,
                "ItemVisibleHasChanged": 3,
                "ItemParentHasChanged": 4,
                "ItemOpacityHasChanged": 5,
                "ItemActiveFocusHasChanged": 6,
                "ItemRotationHasChanged": 7,
                "ItemAntialiasingHasChanged": 8,
                "ItemDevicePixelRatioHasChanged": 9,
                "ItemEnabledHasChanged": 10
            }
        }
        Enum {
            name: "TransformOrigin"
            values: {
                "TopLeft": 0,
                "Top": 1,
                "TopRight": 2,
                "Left": 3,
                "Center": 4,
                "Right": 5,
                "BottomLeft": 6,
                "Bottom": 7,
                "BottomRight": 8
            }
        }
        Property { name: "parent"; type: "QQuickItem"; isPointer: true }
        Property { name: "data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "resources"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "children"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "x"; type: "double" }
        Property { name: "y"; type: "double" }
        Property { name: "z"; type: "double" }
        Property { name: "width"; type: "double" }
        Property { name: "height"; type: "double" }
        Property { name: "opacity"; type: "double" }
        Property { name: "enabled"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "palette"; revision: 1536; type: "QQuickPalette"; isPointer: true }
        Property { name: "visibleChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "states"; type: "QQuickState"; isList: true; isReadonly: true }
        Property { name: "transitions"; type: "QQuickTransition"; isList: true; isReadonly: true }
        Property { name: "state"; type: "string" }
        Property { name: "childrenRect"; type: "QRectF"; isReadonly: true }
        Property { name: "anchors"; type: "QQuickAnchors"; isReadonly: true; isPointer: true }
        Property { name: "left"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "right"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "horizontalCenter"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "top"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "bottom"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "verticalCenter"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "baseline"; type: "QQuickAnchorLine"; isReadonly: true }
        Property { name: "baselineOffset"; type: "double" }
        Property { name: "clip"; type: "bool" }
        Property { name: "focus"; type: "bool" }
        Property { name: "activeFocus"; type: "bool"; isReadonly: true }
        Property { name: "activeFocusOnTab"; revision: 513; type: "bool" }
        Property { name: "rotation"; type: "double" }
        Property { name: "scale"; type: "double" }
        Property { name: "transformOrigin"; type: "QQuickItem::TransformOrigin" }
        Property { name: "transformOriginPoint"; type: "QPointF"; isReadonly: true }
        Property { name: "transform"; type: "QQuickTransform"; isList: true; isReadonly: true }
        Property { name: "smooth"; type: "bool" }
        Property { name: "antialiasing"; type: "bool" }
        Property { name: "implicitWidth"; type: "double" }
        Property { name: "implicitHeight"; type: "double" }
        Property { name: "containmentMask"; revision: 523; type: "QObject"; isPointer: true }
        Property { name: "layer"; type: "QQuickItemLayer"; isReadonly: true; isPointer: true }
        Signal {
            name: "childrenRectChanged"
            Parameter { type: "QRectF" }
        }
        Signal {
            name: "baselineOffsetChanged"
            Parameter { type: "double" }
        }
        Signal {
            name: "stateChanged"
            Parameter { type: "string" }
        }
        Signal {
            name: "focusChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "activeFocusChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "activeFocusOnTabChanged"
            revision: 513
            Parameter { type: "bool" }
        }
        Signal {
            name: "parentChanged"
            Parameter { type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "transformOriginChanged"
            Parameter { type: "TransformOrigin" }
        }
        Signal {
            name: "smoothChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "antialiasingChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "clipChanged"
            Parameter { type: "bool" }
        }
        Signal {
            name: "windowChanged"
            revision: 513
            Parameter { name: "window"; type: "QQuickWindow"; isPointer: true }
        }
        Signal { name: "containmentMaskChanged"; revision: 523 }
        Signal { name: "paletteChanged"; revision: 1536 }
        Signal { name: "paletteCreated"; revision: 1536 }
        Method { name: "update" }
        Method {
            name: "grabToImage"
            revision: 516
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
            Parameter { name: "targetSize"; type: "QSize" }
        }
        Method {
            name: "grabToImage"
            revision: 516
            type: "bool"
            Parameter { name: "callback"; type: "QJSValue" }
        }
        Method {
            name: "contains"
            type: "bool"
            Parameter { name: "point"; type: "QPointF" }
        }
        Method {
            name: "mapFromItem"
            type: "QPointF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "point"; type: "QPointF" }
        }
        Method {
            name: "mapFromItem"
            type: "QPointF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method {
            name: "mapFromItem"
            type: "QRectF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "rect"; type: "QRectF" }
        }
        Method {
            name: "mapFromItem"
            type: "QRectF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
            Parameter { name: "width"; type: "double" }
            Parameter { name: "height"; type: "double" }
        }
        Method {
            name: "mapToItem"
            type: "QPointF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "point"; type: "QPointF" }
        }
        Method {
            name: "mapToItem"
            type: "QPointF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method {
            name: "mapToItem"
            type: "QRectF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "rect"; type: "QRectF" }
        }
        Method {
            name: "mapToItem"
            type: "QRectF"
            Parameter { name: "item"; type: "const QQuickItem"; isPointer: true }
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
            Parameter { name: "width"; type: "double" }
            Parameter { name: "height"; type: "double" }
        }
        Method {
            name: "mapFromGlobal"
            revision: 519
            type: "QPointF"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method {
            name: "mapFromGlobal"
            revision: 519
            type: "QPointF"
            Parameter { name: "point"; type: "QPointF" }
        }
        Method {
            name: "mapToGlobal"
            revision: 519
            type: "QPointF"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method {
            name: "mapToGlobal"
            revision: 519
            type: "QPointF"
            Parameter { name: "point"; type: "QPointF" }
        }
        Method { name: "forceActiveFocus" }
        Method {
            name: "forceActiveFocus"
            Parameter { name: "reason"; type: "Qt::FocusReason" }
        }
        Method {
            name: "nextItemInFocusChain"
            revision: 513
            type: "QQuickItem*"
            Parameter { name: "forward"; type: "bool" }
        }
        Method { name: "nextItemInFocusChain"; revision: 513; type: "QQuickItem*" }
        Method {
            name: "childAt"
            type: "QQuickItem*"
            Parameter { name: "x"; type: "double" }
            Parameter { name: "y"; type: "double" }
        }
        Method { name: "ensurePolished"; revision: 1539 }
        Method { name: "dumpItemTree"; revision: 1539 }
    }
    Component {
        name: "ScenePositionAttached"
        prototype: "QObject"
        exports: ["org.kde.kirigami/ScenePosition 2.5"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "x"; type: "double"; isReadonly: true }
        Property { name: "y"; type: "double"; isReadonly: true }
    }
    Component {
        name: "Settings"
        prototype: "QObject"
        exports: ["org.kde.kirigami/Settings 2.0"]
        isCreatable: false
        isSingleton: true
        exportMetaObjectRevisions: [0]
        Property { name: "tabletModeAvailable"; type: "bool"; isReadonly: true }
        Property { name: "isMobile"; type: "bool"; isReadonly: true }
        Property { name: "tabletMode"; type: "bool"; isReadonly: true }
        Property { name: "hasPlatformMenuBar"; type: "bool"; isReadonly: true }
        Property { name: "hasTransientTouchInput"; type: "bool"; isReadonly: true }
        Property { name: "style"; type: "string"; isReadonly: true }
        Property { name: "mouseWheelScrollLines"; type: "int"; isReadonly: true }
        Property { name: "information"; type: "QStringList"; isReadonly: true }
        Property { name: "applicationWindowIcon"; type: "QVariant"; isReadonly: true }
    }
    Component {
        name: "ShadowGroup"
        prototype: "QObject"
        exports: ["org.kde.kirigami/ShadowGroup 2.12"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Property { name: "size"; type: "double" }
        Property { name: "xOffset"; type: "double" }
        Property { name: "yOffset"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Signal { name: "changed" }
    }
    Component {
        name: "ShadowedRectangle"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["org.kde.kirigami/ShadowedRectangle 2.12"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "RenderType"
            values: {
                "Auto": 0,
                "HighQuality": 1,
                "LowQuality": 2,
                "Software": 3
            }
        }
        Property { name: "radius"; type: "double" }
        Property { name: "color"; type: "QColor" }
        Property { name: "border"; type: "BorderGroup"; isReadonly: true; isPointer: true }
        Property { name: "shadow"; type: "ShadowGroup"; isReadonly: true; isPointer: true }
        Property { name: "corners"; type: "CornersGroup"; isReadonly: true; isPointer: true }
        Property { name: "renderType"; type: "ShadowedRectangle::RenderType" }
        Property { name: "softwareRendering"; type: "bool"; isReadonly: true }
    }
    Component {
        name: "ShadowedTexture"
        defaultProperty: "data"
        prototype: "ShadowedRectangle"
        exports: ["org.kde.kirigami/ShadowedTexture 2.12"]
        exportMetaObjectRevisions: [0]
        Property { name: "source"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        name: "SizeGroup"
        prototype: "QObject"
        exports: ["org.kde.kirigami/SizeGroup 2.14"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Mode"
            values: {
                "None": 0,
                "Width": 1,
                "Height": 2,
                "Both": 3
            }
        }
        Property { name: "mode"; type: "SizeGroup::Mode" }
        Property { name: "items"; type: "QQuickItem"; isList: true; isReadonly: true }
        Method { name: "relayout" }
    }
    Component {
        name: "SpellCheckingAttached"
        prototype: "QObject"
        exports: ["org.kde.kirigami/SpellChecking 2.18"]
        exportMetaObjectRevisions: [0]
        Property { name: "enabled"; type: "bool" }
    }
    Component {
        name: "ToolBarLayout"
        defaultProperty: "data"
        prototype: "QQuickItem"
        exports: ["org.kde.kirigami/ToolBarLayout 2.14"]
        exportMetaObjectRevisions: [0]
        attachedType: "ToolBarLayoutAttached"
        Enum {
            name: "HeightMode"
            values: {
                "AlwaysCenter": 0,
                "AlwaysFill": 1,
                "ConstrainIfLarger": 2
            }
        }
        Property { name: "actions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "hiddenActions"; type: "QList<QObject*>"; isReadonly: true }
        Property { name: "fullDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "iconDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "moreButton"; type: "QQmlComponent"; isPointer: true }
        Property { name: "spacing"; type: "double" }
        Property { name: "alignment"; type: "QFlags<Qt::AlignmentFlag>" }
        Property { name: "visibleWidth"; type: "double"; isReadonly: true }
        Property { name: "minimumWidth"; type: "double"; isReadonly: true }
        Property { name: "layoutDirection"; type: "Qt::LayoutDirection" }
        Property { name: "heightMode"; type: "ToolBarLayout::HeightMode" }
        Method { name: "relayout" }
    }
    Component {
        name: "ToolBarLayoutAttached"
        prototype: "QObject"
        Property { name: "action"; type: "QObject"; isReadonly: true; isPointer: true }
    }
    Component {
        name: "WheelHandler"
        prototype: "QObject"
        exports: ["org.kde.kirigami/WheelHandler 2.9"]
        exportMetaObjectRevisions: [0]
        Property { name: "target"; type: "QQuickItem"; isPointer: true }
        Property { name: "verticalStepSize"; type: "double" }
        Property { name: "horizontalStepSize"; type: "double" }
        Property { name: "pageScrollModifiers"; type: "QFlags<Qt::KeyboardModifier>" }
        Property { name: "filterMouseEvents"; type: "bool" }
        Property { name: "keyNavigationEnabled"; type: "bool" }
        Property { name: "blockTargetWheel"; type: "bool" }
        Property { name: "scrollFlickableTarget"; type: "bool" }
        Signal {
            name: "wheel"
            Parameter { name: "wheel"; type: "KirigamiWheelEvent"; isPointer: true }
        }
        Method {
            name: "scrollUp"
            type: "bool"
            Parameter { name: "stepSize"; type: "double" }
        }
        Method { name: "scrollUp"; type: "bool" }
        Method {
            name: "scrollDown"
            type: "bool"
            Parameter { name: "stepSize"; type: "double" }
        }
        Method { name: "scrollDown"; type: "bool" }
        Method {
            name: "scrollLeft"
            type: "bool"
            Parameter { name: "stepSize"; type: "double" }
        }
        Method { name: "scrollLeft"; type: "bool" }
        Method {
            name: "scrollRight"
            type: "bool"
            Parameter { name: "stepSize"; type: "double" }
        }
        Method { name: "scrollRight"; type: "bool" }
    }
    Component {
        prototype: "QQuickItem"
        name: "org.kde.kirigami/AboutItem 2.19"
        exports: ["org.kde.kirigami/AboutItem 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "_content"
        Property { name: "aboutData"; type: "QVariant" }
        Property { name: "getInvolvedUrl"; type: "QUrl" }
        Property { name: "donateUrl"; type: "QUrl" }
        Property { name: "_usePageStack"; type: "bool" }
        Property { name: "wideMode"; type: "bool" }
        Property { name: "_content"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickPage"
        name: "org.kde.kirigami/AboutPage 2.6"
        exports: ["org.kde.kirigami/AboutPage 2.6"]
        exportMetaObjectRevisions: [6]
        isComposite: true
        defaultProperty: "_content"
        Property { name: "donateUrl"; type: "QUrl" }
        Property { name: "aboutData"; type: "QVariant" }
        Property { name: "getInvolvedUrl"; type: "QUrl" }
        Property { name: "_content"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "refreshing"; type: "bool" }
        Property { name: "supportsRefreshing"; type: "bool" }
        Property { name: "flickable"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "verticalScrollBarPolicy"; type: "int" }
        Property { name: "horizontalScrollBarPolicy"; type: "int" }
        Property { name: "mainItem"; type: "QObject"; isPointer: true }
        Property { name: "keyboardNavigationEnabled"; type: "bool" }
        Property { name: "scrollablePageData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "scrollablePageChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "actions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "isCurrentPage"; type: "bool"; isReadonly: true }
        Property { name: "icon"; type: "ActionIconGroup_QMLTYPE_59"; isPointer: true }
        Property { name: "needsAttention"; type: "bool" }
        Property { name: "progress"; type: "QVariant" }
        Property { name: "titleDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "globalToolBarItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "globalToolBarStyle"; type: "int" }
        Property { name: "overlay"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Signal { name: "contextualActionsAboutToShow" }
        Signal {
            name: "backRequested"
            Parameter { name: "event"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "org.kde.kirigami/AbstractApplicationHeader 2.0"
        exports: ["org.kde.kirigami/AbstractApplicationHeader 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentItem"
        Property { name: "minimumHeight"; type: "int" }
        Property { name: "preferredHeight"; type: "int" }
        Property { name: "maximumHeight"; type: "int" }
        Property { name: "position"; type: "int" }
        Property { name: "pageRow"; type: "PageRow_QMLTYPE_81"; isPointer: true }
        Property { name: "page"; type: "Page_QMLTYPE_90"; isPointer: true }
        Property { name: "paintedHeight"; type: "int"; isReadonly: true }
        Property { name: "leftPadding"; type: "int" }
        Property { name: "topPadding"; type: "int" }
        Property { name: "rightPadding"; type: "int" }
        Property { name: "bottomPadding"; type: "int" }
        Property { name: "separatorVisible"; type: "bool" }
        Property { name: "hideWhenTouchScrolling"; type: "bool" }
        Property { name: "__appWindow"; type: "QObject"; isPointer: true }
        Property { name: "background"; type: "QQuickItem"; isPointer: true }
        Property { name: "contentItem"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "org.kde.kirigami/AbstractApplicationItem 2.1"
        exports: ["org.kde.kirigami/AbstractApplicationItem 2.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "__data"
        Property { name: "pageStack"; type: "QQuickItem"; isPointer: true }
        Property { name: "activeFocusItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "font"; type: "QFont" }
        Property { name: "palette"; type: "QVariant" }
        Property { name: "locale"; type: "" }
        Property { name: "menuBar"; type: "QQuickMenuBar"; isPointer: true }
        Property { name: "header"; type: "AbstractApplicationHeader_QMLTYPE_101"; isPointer: true }
        Property { name: "footer"; type: "QQuickItem"; isPointer: true }
        Property { name: "controlsVisible"; type: "bool" }
        Property { name: "globalDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "wideScreen"; type: "bool" }
        Property { name: "contextDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "reachableMode"; type: "bool" }
        Property { name: "reachableModeEnabled"; type: "bool" }
        Property { name: "contentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "color"; type: "QColor" }
        Property { name: "background"; type: "QQuickItem"; isPointer: true }
        Property { name: "__data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "overlay"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Method {
            name: "showPassiveNotification"
            type: "QVariant"
            Parameter { name: "message"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
            Parameter { name: "actionText"; type: "QVariant" }
            Parameter { name: "callBack"; type: "QVariant" }
        }
        Method {
            name: "hidePassiveNotification"
            type: "QVariant"
            Parameter { name: "index"; type: "QVariant" }
        }
        Method { name: "applicationWindow"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickApplicationWindow"
        name: "org.kde.kirigami/AbstractApplicationWindow 2.0"
        exports: ["org.kde.kirigami/AbstractApplicationWindow 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "pageStack"; type: "QQuickItem"; isPointer: true }
        Property { name: "controlsVisible"; type: "bool" }
        Property { name: "globalDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "wideScreen"; type: "bool" }
        Property { name: "contextDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "reachableMode"; type: "bool" }
        Property { name: "reachableModeEnabled"; type: "bool" }
        Property { name: "overlay"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "quitAction"; type: "Action_QMLTYPE_3"; isReadonly: true; isPointer: true }
        Method {
            name: "showPassiveNotification"
            type: "QVariant"
            Parameter { name: "message"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
            Parameter { name: "actionText"; type: "QVariant" }
            Parameter { name: "callBack"; type: "QVariant" }
        }
        Method {
            name: "hidePassiveNotification"
            type: "QVariant"
            Parameter { name: "index"; type: "QVariant" }
        }
        Method { name: "applicationWindow"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItemDelegate"
        name: "org.kde.kirigami/AbstractCard 2.4"
        exports: ["org.kde.kirigami/AbstractCard 2.4"]
        exportMetaObjectRevisions: [4]
        isComposite: true
        defaultProperty: "data"
        Property { name: "header"; type: "QQuickItem"; isPointer: true }
        Property { name: "headerOrientation"; type: "int" }
        Property { name: "footer"; type: "QQuickItem"; isPointer: true }
        Property { name: "showClickFeedback"; type: "bool" }
    }
    Component {
        prototype: "QQuickAbstractButton"
        name: "org.kde.kirigami/AbstractChip 2.19"
        exports: ["org.kde.kirigami/AbstractChip 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "data"
        Property { name: "closable"; type: "bool" }
        Signal { name: "removed" }
    }
    Component {
        prototype: "QQuickItemDelegate"
        name: "org.kde.kirigami/AbstractListItem 2.0"
        exports: ["org.kde.kirigami/AbstractListItem 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "_default"
        Property { name: "supportsMouseEvents"; type: "bool" }
        Property { name: "alternatingBackground"; type: "bool" }
        Property { name: "sectionDelegate"; type: "bool" }
        Property { name: "separatorVisible"; type: "bool" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "alternateBackgroundColor"; type: "QColor" }
        Property { name: "activeBackgroundColor"; type: "QColor" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "activeTextColor"; type: "QColor" }
        Property { name: "containsMouse"; type: "bool"; isReadonly: true }
        Property { name: "_default"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        prototype: "QQuickAction"
        name: "org.kde.kirigami/Action 2.0"
        exports: ["org.kde.kirigami/Action 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "children"
        Property { name: "visible"; type: "bool" }
        Property { name: "tooltip"; type: "string" }
        Property { name: "separator"; type: "bool" }
        Property { name: "expandible"; type: "bool" }
        Property { name: "parent"; type: "Action_QMLTYPE_2"; isPointer: true }
        Property { name: "displayHint"; type: "int" }
        Property { name: "displayComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "children"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "visibleChildren"; type: "QVariant"; isReadonly: true }
    }
    Component {
        prototype: "QQuickTextField"
        name: "org.kde.kirigami/ActionTextField 2.7"
        exports: ["org.kde.kirigami/ActionTextField 2.7"]
        exportMetaObjectRevisions: [7]
        isComposite: true
        defaultProperty: "data"
        Property { name: "leftActions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "rightActions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "focusSequence"; type: "QVariant" }
        Property { name: "_leftActionsRow"; type: "QQuickRow"; isReadonly: true; isPointer: true }
        Property { name: "_rightActionsRow"; type: "QQuickRow"; isReadonly: true; isPointer: true }
    }
    Component {
        prototype: "QQuickControl"
        name: "org.kde.kirigami/ActionToolBar 2.5"
        exports: ["org.kde.kirigami/ActionToolBar 2.5"]
        exportMetaObjectRevisions: [5]
        isComposite: true
        defaultProperty: "data"
        Property { name: "flat"; type: "bool" }
        Property { name: "display"; type: "int" }
        Property { name: "position"; type: "int" }
        Property { name: "overflowIconName"; type: "string" }
        Property { name: "actions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "alignment"; type: "int" }
        Property { name: "maximumContentWidth"; type: "double"; isReadonly: true }
        Property { name: "visibleWidth"; type: "double"; isReadonly: true }
        Property { name: "heightMode"; type: "int" }
    }
    Component {
        prototype: "QQuickItem"
        name: "org.kde.kirigami/ApplicationItem 2.1"
        exports: ["org.kde.kirigami/ApplicationItem 2.1"]
        exportMetaObjectRevisions: [1]
        isComposite: true
        defaultProperty: "__data"
        Property { name: "pageStack"; type: "PageRow_QMLTYPE_81"; isReadonly: true; isPointer: true }
        Property { name: "activeFocusItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "font"; type: "QFont" }
        Property { name: "palette"; type: "QVariant" }
        Property { name: "locale"; type: "" }
        Property { name: "menuBar"; type: "QQuickMenuBar"; isPointer: true }
        Property { name: "header"; type: "AbstractApplicationHeader_QMLTYPE_101"; isPointer: true }
        Property { name: "footer"; type: "QQuickItem"; isPointer: true }
        Property { name: "controlsVisible"; type: "bool" }
        Property { name: "globalDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "wideScreen"; type: "bool" }
        Property { name: "contextDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "reachableMode"; type: "bool" }
        Property { name: "reachableModeEnabled"; type: "bool" }
        Property { name: "contentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "color"; type: "QColor" }
        Property { name: "background"; type: "QQuickItem"; isPointer: true }
        Property { name: "__data"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "overlay"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Method {
            name: "showPassiveNotification"
            type: "QVariant"
            Parameter { name: "message"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
            Parameter { name: "actionText"; type: "QVariant" }
            Parameter { name: "callBack"; type: "QVariant" }
        }
        Method {
            name: "hidePassiveNotification"
            type: "QVariant"
            Parameter { name: "index"; type: "QVariant" }
        }
        Method { name: "applicationWindow"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickApplicationWindow"
        name: "org.kde.kirigami/ApplicationWindow 2.0"
        exports: ["org.kde.kirigami/ApplicationWindow 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "pageStack"; type: "PageRow_QMLTYPE_81"; isReadonly: true; isPointer: true }
        Property { name: "controlsVisible"; type: "bool" }
        Property { name: "globalDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "wideScreen"; type: "bool" }
        Property { name: "contextDrawer"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "reachableMode"; type: "bool" }
        Property { name: "reachableModeEnabled"; type: "bool" }
        Property { name: "overlay"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "quitAction"; type: "Action_QMLTYPE_3"; isReadonly: true; isPointer: true }
        Method {
            name: "showPassiveNotification"
            type: "QVariant"
            Parameter { name: "message"; type: "QVariant" }
            Parameter { name: "timeout"; type: "QVariant" }
            Parameter { name: "actionText"; type: "QVariant" }
            Parameter { name: "callBack"; type: "QVariant" }
        }
        Method {
            name: "hidePassiveNotification"
            type: "QVariant"
            Parameter { name: "index"; type: "QVariant" }
        }
        Method { name: "applicationWindow"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItemDelegate"
        name: "org.kde.kirigami/BasicListItem 2.0"
        exports: ["org.kde.kirigami/BasicListItem 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "_basicDefault"
        Property { name: "leading"; type: "QQuickItem"; isPointer: true }
        Property { name: "leadingPadding"; type: "double" }
        Property { name: "leadingFillVertically"; type: "bool" }
        Property { name: "trailing"; type: "QQuickItem"; isPointer: true }
        Property { name: "trailingPadding"; type: "double" }
        Property { name: "trailingFillVertically"; type: "bool" }
        Property { name: "reserveSpaceForSubtitle"; type: "bool" }
        Property { name: "fadeContent"; type: "bool" }
        Property { name: "toolTipVisible"; type: "bool" }
        Property { name: "label"; type: "string" }
        Property { name: "subtitle"; type: "string" }
        Property { name: "iconSize"; type: "int" }
        Property { name: "iconColor"; type: "QColor" }
        Property { name: "iconSelected"; type: "bool" }
        Property { name: "reserveSpaceForIcon"; type: "bool" }
        Property { name: "reserveSpaceForLabel"; type: "bool" }
        Property { name: "textSpacing"; type: "double" }
        Property { name: "labelItem"; type: "Label_QMLTYPE_1"; isReadonly: true; isPointer: true }
        Property { name: "subtitleItem"; type: "Label_QMLTYPE_1"; isReadonly: true; isPointer: true }
        Property { name: "_basicDefault"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "supportsMouseEvents"; type: "bool" }
        Property { name: "alternatingBackground"; type: "bool" }
        Property { name: "sectionDelegate"; type: "bool" }
        Property { name: "separatorVisible"; type: "bool" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "alternateBackgroundColor"; type: "QColor" }
        Property { name: "activeBackgroundColor"; type: "QColor" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "activeTextColor"; type: "QColor" }
        Property { name: "containsMouse"; type: "bool"; isReadonly: true }
        Property { name: "_default"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        prototype: "QQuickItemDelegate"
        name: "org.kde.kirigami/Card 2.4"
        exports: ["org.kde.kirigami/Card 2.4"]
        exportMetaObjectRevisions: [4]
        isComposite: true
        defaultProperty: "data"
        Property { name: "actions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "banner"; type: "BannerImage_QMLTYPE_171"; isReadonly: true; isPointer: true }
        Property { name: "header"; type: "QQuickItem"; isPointer: true }
        Property { name: "headerOrientation"; type: "int" }
        Property { name: "footer"; type: "QQuickItem"; isPointer: true }
        Property { name: "showClickFeedback"; type: "bool" }
    }
    Component {
        prototype: "QQuickGridView"
        name: "org.kde.kirigami/CardsGridView 2.4"
        exports: ["org.kde.kirigami/CardsGridView 2.4"]
        exportMetaObjectRevisions: [4]
        isComposite: true
        defaultProperty: "delegate"
        Property { name: "extraColumns"; type: "bool" }
        Property { name: "columns"; type: "int"; isReadonly: true }
        Property { name: "maximumColumns"; type: "int" }
        Property { name: "maximumColumnWidth"; type: "int" }
        Property { name: "minimumColumnWidth"; type: "int" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "_delegateComponent"; type: "QQmlComponent"; isPointer: true }
    }
    Component {
        prototype: "QQuickGridLayout"
        name: "org.kde.kirigami/CardsLayout 2.4"
        exports: ["org.kde.kirigami/CardsLayout 2.4"]
        exportMetaObjectRevisions: [4]
        isComposite: true
        defaultProperty: "data"
        Property { name: "maximumColumns"; type: "int" }
        Property { name: "maximumColumnWidth"; type: "int" }
        Property { name: "minimumColumnWidth"; type: "int" }
    }
    Component {
        prototype: "QQuickListView"
        name: "org.kde.kirigami/CardsListView 2.4"
        exports: ["org.kde.kirigami/CardsListView 2.4"]
        exportMetaObjectRevisions: [4]
        isComposite: true
        defaultProperty: "data"
    }
    Component {
        prototype: "QQuickControl"
        name: "org.kde.kirigami/CategorizedSettings 2.18"
        exports: ["org.kde.kirigami/CategorizedSettings 2.18"]
        exportMetaObjectRevisions: [18]
        isComposite: true
        defaultProperty: "data"
        Property { name: "defaultPage"; type: "string" }
        Property { name: "actions"; type: "PagePoolAction_QMLTYPE_181"; isList: true; isReadonly: true }
        Property { name: "pool"; type: "PagePool"; isPointer: true }
        Property { name: "title"; type: "string"; isReadonly: true }
        Property { name: "completed"; type: "bool" }
        Property { name: "stack"; type: "PageRow_QMLTYPE_81"; isReadonly: true; isPointer: true }
        Signal {
            name: "backRequested"
            Parameter { name: "event"; type: "QVariant" }
        }
        Method {
            name: "getActionByName"
            type: "QVariant"
            Parameter { name: "actionName"; type: "QVariant" }
        }
        Method {
            name: "indexOfAction"
            type: "QVariant"
            Parameter { name: "action"; type: "QVariant" }
        }
        Property { name: "lastItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "initialPage"; type: "QVariant" }
        Property { name: "defaultColumnWidth"; type: "int" }
        Property { name: "wideMode"; type: "bool"; isReadonly: true }
        Property { name: "leftSidebar"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "popHiddenPages"; type: "bool" }
        Property { name: "depth"; type: "int"; isReadonly: true }
        Property { name: "currentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "columnView"; type: "ColumnView"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "visibleItems"; type: "QList<QObject*>"; isReadonly: true }
        Property { name: "firstVisibleItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "lastVisibleItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "interactive"; type: "bool" }
        Property { name: "separatorVisible"; type: "bool" }
        Property {
            name: "globalToolBar"
            type: "PageRowGlobalToolBarStyleGroup_QMLTYPE_80"
            isReadonly: true
            isPointer: true
        }
        Property { name: "layers"; type: "StackView_QMLTYPE_63"; isReadonly: true; isPointer: true }
        Signal {
            name: "pageInserted"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "page"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "pagePushed"
            Parameter { name: "page"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "pageRemoved"
            Parameter { name: "page"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "push"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
        }
        Method {
            name: "pushDialogLayer"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
            Parameter { name: "windowProperties"; type: "QVariant" }
        }
        Method {
            name: "insertPage"
            type: "QVariant"
            Parameter { name: "position"; type: "QVariant" }
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
        }
        Method {
            name: "movePage"
            type: "QVariant"
            Parameter { name: "fromPos"; type: "QVariant" }
            Parameter { name: "toPos"; type: "QVariant" }
        }
        Method {
            name: "removePage"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
        }
        Method {
            name: "pop"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
        }
        Method {
            name: "replace"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
        }
        Method { name: "clear"; type: "QVariant" }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "idx"; type: "QVariant" }
        }
        Method { name: "flickBack"; type: "QVariant" }
        Method {
            name: "goBack"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
        }
        Method { name: "goForward"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickItemDelegate"
        name: "org.kde.kirigami/CheckableListItem 2.14"
        exports: ["org.kde.kirigami/CheckableListItem 2.14"]
        exportMetaObjectRevisions: [14]
        isComposite: true
        defaultProperty: "_basicDefault"
        Property { name: "leading"; type: "QQuickItem"; isPointer: true }
        Property { name: "leadingPadding"; type: "double" }
        Property { name: "leadingFillVertically"; type: "bool" }
        Property { name: "trailing"; type: "QQuickItem"; isPointer: true }
        Property { name: "trailingPadding"; type: "double" }
        Property { name: "trailingFillVertically"; type: "bool" }
        Property { name: "reserveSpaceForSubtitle"; type: "bool" }
        Property { name: "fadeContent"; type: "bool" }
        Property { name: "toolTipVisible"; type: "bool" }
        Property { name: "label"; type: "string" }
        Property { name: "subtitle"; type: "string" }
        Property { name: "iconSize"; type: "int" }
        Property { name: "iconColor"; type: "QColor" }
        Property { name: "iconSelected"; type: "bool" }
        Property { name: "reserveSpaceForIcon"; type: "bool" }
        Property { name: "reserveSpaceForLabel"; type: "bool" }
        Property { name: "textSpacing"; type: "double" }
        Property { name: "labelItem"; type: "Label_QMLTYPE_1"; isReadonly: true; isPointer: true }
        Property { name: "subtitleItem"; type: "Label_QMLTYPE_1"; isReadonly: true; isPointer: true }
        Property { name: "_basicDefault"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "supportsMouseEvents"; type: "bool" }
        Property { name: "alternatingBackground"; type: "bool" }
        Property { name: "sectionDelegate"; type: "bool" }
        Property { name: "separatorVisible"; type: "bool" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "alternateBackgroundColor"; type: "QColor" }
        Property { name: "activeBackgroundColor"; type: "QColor" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "activeTextColor"; type: "QColor" }
        Property { name: "containsMouse"; type: "bool"; isReadonly: true }
        Property { name: "_default"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        prototype: "QQuickAbstractButton"
        name: "org.kde.kirigami/Chip 2.19"
        exports: ["org.kde.kirigami/Chip 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "data"
        Property { name: "labelItem"; type: "Label_QMLTYPE_1"; isReadonly: true; isPointer: true }
        Property { name: "closable"; type: "bool" }
        Signal { name: "removed" }
    }
    Component {
        prototype: "QQuickDrawer"
        name: "org.kde.kirigami/ContextDrawer 2.0"
        exports: ["org.kde.kirigami/ContextDrawer 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "title"; type: "string" }
        Property { name: "actions"; type: "QVariant" }
        Property { name: "page"; type: "Page_QMLTYPE_90"; isPointer: true }
        Property { name: "header"; type: "QQmlComponent"; isPointer: true }
        Property { name: "footer"; type: "QQmlComponent"; isPointer: true }
        Property { name: "drawerOpen"; type: "bool" }
        Property { name: "peeking"; type: "bool" }
        Property { name: "animating"; type: "bool"; isReadonly: true }
        Property { name: "collapsible"; type: "bool" }
        Property { name: "collapsed"; type: "bool" }
        Property { name: "collapsedSize"; type: "int" }
        Property {
            name: "handleOpenIcon"
            type: "IconPropertiesGroup_QMLTYPE_64"
            isReadonly: true
            isPointer: true
        }
        Property { name: "handleClosedIcon"; type: "IconPropertiesGroup_QMLTYPE_64"; isPointer: true }
        Property { name: "handleOpenToolTip"; type: "string" }
        Property { name: "handleClosedToolTip"; type: "string" }
        Property { name: "handleVisible"; type: "bool" }
        Property { name: "handle"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "__internal"; type: "QObject"; isPointer: true }
    }
    Component {
        prototype: "QPlatformDialogHelper"
        name: "org.kde.kirigami/Dialog 2.19"
        exports: ["org.kde.kirigami/Dialog 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "dialogData"
        Property { name: "mainItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "absoluteMaximumHeight"; type: "double"; isReadonly: true }
        Property { name: "absoluteMaximumWidth"; type: "double"; isReadonly: true }
        Property { name: "maximumHeight"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "preferredHeight"; type: "double" }
        Property { name: "preferredWidth"; type: "double" }
        Property { name: "footerLeadingComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "footerTrailingComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "showCloseButton"; type: "bool" }
        Property { name: "flatFooterButtons"; type: "bool" }
        Property { name: "customFooterActions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "dialogData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "dialogChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Method {
            name: "standardButton"
            type: "QQuickAbstractButton*"
            Parameter { name: "button"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickColumnLayout"
        name: "org.kde.kirigami/FlexColumn 2.14"
        exports: ["org.kde.kirigami/FlexColumn 2.14"]
        exportMetaObjectRevisions: [14]
        isComposite: true
        defaultProperty: "columnChildren"
        Enum {
            name: "CrossAxis"
            values: {
                "Left": 0,
                "Center": 1,
                "Right": 2
            }
        }
        Property { name: "padding"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "alignment"; type: "int" }
        Property { name: "columnChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickItem"
        name: "org.kde.kirigami/FormLayout 2.3"
        exports: ["org.kde.kirigami/FormLayout 2.3"]
        exportMetaObjectRevisions: [3]
        isComposite: true
        defaultProperty: "data"
        Property { name: "wideMode"; type: "bool" }
        Property { name: "twinFormLayouts"; type: "QQuickItem"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickDrawer"
        name: "org.kde.kirigami/GlobalDrawer 2.0"
        exports: ["org.kde.kirigami/GlobalDrawer 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "content"
        Property { name: "actions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "header"; type: "QQuickItem"; isPointer: true }
        Property { name: "bannerVisible"; type: "bool" }
        Property { name: "showTopContentWhenCollapsed"; type: "bool" }
        Property { name: "showContentWhenCollapsed"; type: "bool" }
        Property { name: "showHeaderWhenCollapsed"; type: "bool" }
        Property { name: "resetMenuOnTriggered"; type: "bool" }
        Property { name: "currentSubMenu"; type: "Action_QMLTYPE_3"; isReadonly: true; isPointer: true }
        Property { name: "isMenu"; type: "bool" }
        Property { name: "collapseButtonVisible"; type: "bool" }
        Property { name: "title"; type: "string" }
        Property { name: "titleIcon"; type: "QVariant" }
        Property { name: "bannerImageSource"; type: "QUrl" }
        Property { name: "topContent"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "content"; type: "QObject"; isList: true; isReadonly: true }
        Signal { name: "bannerClicked" }
        Method { name: "resetMenu"; type: "QVariant" }
        Property { name: "drawerOpen"; type: "bool" }
        Property { name: "peeking"; type: "bool" }
        Property { name: "animating"; type: "bool"; isReadonly: true }
        Property { name: "collapsible"; type: "bool" }
        Property { name: "collapsed"; type: "bool" }
        Property { name: "collapsedSize"; type: "int" }
        Property {
            name: "handleOpenIcon"
            type: "IconPropertiesGroup_QMLTYPE_64"
            isReadonly: true
            isPointer: true
        }
        Property { name: "handleClosedIcon"; type: "IconPropertiesGroup_QMLTYPE_64"; isPointer: true }
        Property { name: "handleOpenToolTip"; type: "string" }
        Property { name: "handleClosedToolTip"; type: "string" }
        Property { name: "handleVisible"; type: "bool" }
        Property { name: "handle"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "__internal"; type: "QObject"; isPointer: true }
    }
    Component {
        prototype: "QQuickLabel"
        name: "org.kde.kirigami/Heading 2.0"
        exports: ["org.kde.kirigami/Heading 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Enum {
            name: "Type"
            values: {
                "Normal": 0,
                "Primary": 1,
                "Secondary": 2
            }
        }
        Property { name: "level"; type: "int" }
        Property { name: "type"; type: "int" }
    }
    Component {
        prototype: "QQuickControl"
        name: "org.kde.kirigami/InlineMessage 2.4"
        exports: ["org.kde.kirigami/InlineMessage 2.4"]
        exportMetaObjectRevisions: [4]
        isComposite: true
        defaultProperty: "data"
        Property { name: "type"; type: "int" }
        Property { name: "icon"; type: "IconPropertiesGroup_QMLTYPE_64"; isPointer: true }
        Property { name: "text"; type: "string" }
        Property { name: "showCloseButton"; type: "bool" }
        Property { name: "actions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "animating"; type: "bool"; isReadonly: true }
        Property { name: "_animating"; type: "bool" }
        Property { name: "hoveredLink"; type: "string"; isReadonly: true }
        Signal {
            name: "linkHovered"
            Parameter { name: "link"; type: "string" }
        }
        Signal {
            name: "linkActivated"
            Parameter { name: "link"; type: "string" }
        }
    }
    Component {
        prototype: "QQuickLabel"
        name: "org.kde.kirigami/LinkButton 2.6"
        exports: ["org.kde.kirigami/LinkButton 2.6"]
        exportMetaObjectRevisions: [6]
        isComposite: true
        defaultProperty: "data"
        Property { name: "action"; type: "Action_QMLTYPE_3"; isPointer: true }
        Property { name: "acceptedButtons"; type: "int" }
        Property { name: "mouseArea"; type: "QQuickMouseArea"; isReadonly: true; isPointer: true }
        Signal {
            name: "pressed"
            Parameter { name: "mouse"; type: "QVariant" }
        }
        Signal {
            name: "clicked"
            Parameter { name: "mouse"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickItem"
        name: "org.kde.kirigami/ListItemDragHandle 2.5"
        exports: ["org.kde.kirigami/ListItemDragHandle 2.5"]
        exportMetaObjectRevisions: [5]
        isComposite: true
        defaultProperty: "data"
        Property { name: "listItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "listView"; type: "QQuickListView"; isPointer: true }
        Signal {
            name: "moveRequested"
            Parameter { name: "oldIndex"; type: "int" }
            Parameter { name: "newIndex"; type: "int" }
        }
        Signal { name: "dropped" }
    }
    Component {
        prototype: "QQuickItemDelegate"
        name: "org.kde.kirigami/ListSectionHeader 2.10"
        exports: ["org.kde.kirigami/ListSectionHeader 2.10"]
        exportMetaObjectRevisions: [10]
        isComposite: true
        defaultProperty: "_contents"
        Property { name: "label"; type: "string" }
        Property { name: "_contents"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "supportsMouseEvents"; type: "bool" }
        Property { name: "alternatingBackground"; type: "bool" }
        Property { name: "sectionDelegate"; type: "bool" }
        Property { name: "separatorVisible"; type: "bool" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "alternateBackgroundColor"; type: "QColor" }
        Property { name: "activeBackgroundColor"; type: "QColor" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "activeTextColor"; type: "QColor" }
        Property { name: "containsMouse"; type: "bool"; isReadonly: true }
        Property { name: "_default"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        prototype: "QQuickColumnLayout"
        name: "org.kde.kirigami/LoadingPlaceholder 2.19"
        exports: ["org.kde.kirigami/LoadingPlaceholder 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "data"
        Property { name: "determinate"; type: "bool" }
        Property {
            name: "progressBar"
            type: "ProgressBar_QMLTYPE_239"
            isReadonly: true
            isPointer: true
        }
        Enum {
            name: "Type"
            values: {
                "Actionable": 0,
                "Informational": 1
            }
        }
        Property { name: "type"; type: "int" }
        Property { name: "text"; type: "string" }
        Property { name: "explanation"; type: "string" }
        Property { name: "icon"; type: "ActionIconGroup_QMLTYPE_59"; isPointer: true }
        Property { name: "helpfulAction"; type: "QQuickAction"; isPointer: true }
    }
    Component {
        prototype: "QPlatformDialogHelper"
        name: "org.kde.kirigami/MenuDialog 2.19"
        exports: ["org.kde.kirigami/MenuDialog 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "dialogData"
        Property { name: "actions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "contentHeader"; type: "QQuickItem"; isPointer: true }
        Property {
            name: "contentHeaderControl"
            type: "Control_QMLTYPE_62"
            isReadonly: true
            isPointer: true
        }
        Property { name: "mainItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "absoluteMaximumHeight"; type: "double"; isReadonly: true }
        Property { name: "absoluteMaximumWidth"; type: "double"; isReadonly: true }
        Property { name: "maximumHeight"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "preferredHeight"; type: "double" }
        Property { name: "preferredWidth"; type: "double" }
        Property { name: "footerLeadingComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "footerTrailingComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "showCloseButton"; type: "bool" }
        Property { name: "flatFooterButtons"; type: "bool" }
        Property { name: "customFooterActions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "dialogData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "dialogChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Method {
            name: "standardButton"
            type: "QQuickAbstractButton*"
            Parameter { name: "button"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickToolBar"
        name: "org.kde.kirigami/NavigationTabBar 2.19"
        exports: ["org.kde.kirigami/NavigationTabBar 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "actions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "maximumContentWidth"; type: "double" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "foregroundColor"; type: "QColor" }
        Property { name: "highlightForegroundColor"; type: "QColor" }
        Property { name: "highlightBarColor"; type: "QColor" }
        Property { name: "shadow"; type: "bool" }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Property { name: "tabGroup"; type: "QQuickButtonGroup"; isReadonly: true; isPointer: true }
        Property { name: "recolorIcons"; type: "bool" }
        Property { name: "buttonWidth"; type: "double" }
    }
    Component {
        prototype: "QQuickTabButton"
        name: "org.kde.kirigami/NavigationTabButton 2.19"
        exports: ["org.kde.kirigami/NavigationTabButton 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "data"
        Property { name: "tabIndex"; type: "int"; isReadonly: true }
        Property { name: "recolorIcon"; type: "bool" }
        Property { name: "foregroundColor"; type: "QColor" }
        Property { name: "highlightForegroundColor"; type: "QColor" }
        Property { name: "highlightBarColor"; type: "QColor" }
        Property { name: "pressedColor"; type: "QColor" }
        Property { name: "hoverSelectColor"; type: "QColor" }
        Property { name: "checkedBorderColor"; type: "QColor" }
        Property { name: "pressedBorderColor"; type: "QColor" }
    }
    Component {
        prototype: "QQuickDrawer"
        name: "org.kde.kirigami/OverlayDrawer 2.0"
        exports: ["org.kde.kirigami/OverlayDrawer 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "drawerOpen"; type: "bool" }
        Property { name: "peeking"; type: "bool" }
        Property { name: "animating"; type: "bool"; isReadonly: true }
        Property { name: "collapsible"; type: "bool" }
        Property { name: "collapsed"; type: "bool" }
        Property { name: "collapsedSize"; type: "int" }
        Property {
            name: "handleOpenIcon"
            type: "IconPropertiesGroup_QMLTYPE_64"
            isReadonly: true
            isPointer: true
        }
        Property { name: "handleClosedIcon"; type: "IconPropertiesGroup_QMLTYPE_64"; isPointer: true }
        Property { name: "handleOpenToolTip"; type: "string" }
        Property { name: "handleClosedToolTip"; type: "string" }
        Property { name: "handleVisible"; type: "bool" }
        Property { name: "handle"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "__internal"; type: "QObject"; isPointer: true }
    }
    Component {
        prototype: "QQuickPopup"
        name: "org.kde.kirigami/OverlaySheet 2.0"
        exports: ["org.kde.kirigami/OverlaySheet 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "flickableContentData"
        Property { name: "title"; type: "string" }
        Property { name: "showCloseButton"; type: "bool" }
        Property { name: "header"; type: "QQuickItem"; isPointer: true }
        Property { name: "footer"; type: "QQuickItem"; isPointer: true }
        Property { name: "flickableContentData"; type: "QObject"; isList: true; isReadonly: true }
    }
    Component {
        prototype: "QQuickPage"
        name: "org.kde.kirigami/Page 2.0"
        exports: ["org.kde.kirigami/Page 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "contentData"
        Property { name: "flickable"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "actions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "isCurrentPage"; type: "bool"; isReadonly: true }
        Property { name: "icon"; type: "ActionIconGroup_QMLTYPE_59"; isPointer: true }
        Property { name: "needsAttention"; type: "bool" }
        Property { name: "progress"; type: "QVariant" }
        Property { name: "titleDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "globalToolBarItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "globalToolBarStyle"; type: "int" }
        Property { name: "overlay"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Signal { name: "contextualActionsAboutToShow" }
        Signal {
            name: "backRequested"
            Parameter { name: "event"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickAction"
        name: "org.kde.kirigami/PagePoolAction 2.11"
        exports: ["org.kde.kirigami/PagePoolAction 2.11"]
        exportMetaObjectRevisions: [11]
        isComposite: true
        defaultProperty: "children"
        Property { name: "page"; type: "string" }
        Property { name: "pagePool"; type: "PagePool"; isPointer: true }
        Property { name: "pageStack"; type: "QQuickItem"; isPointer: true }
        Property { name: "basePage"; type: "QQuickPage"; isPointer: true }
        Property { name: "initialProperties"; type: "QVariant" }
        Property { name: "useLayers"; type: "bool" }
        Property { name: "_private"; type: "QObject"; isPointer: true }
        Method { name: "pageItem"; type: "QQuickItem*" }
        Method { name: "layerContainsPage"; type: "bool" }
        Method { name: "stackContainsPage"; type: "bool" }
        Property { name: "visible"; type: "bool" }
        Property { name: "tooltip"; type: "string" }
        Property { name: "separator"; type: "bool" }
        Property { name: "expandible"; type: "bool" }
        Property { name: "parent"; type: "Action_QMLTYPE_2"; isPointer: true }
        Property { name: "displayHint"; type: "int" }
        Property { name: "displayComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "children"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "visibleChildren"; type: "QVariant"; isReadonly: true }
    }
    Component {
        prototype: "QQuickControl"
        name: "org.kde.kirigami/PageRow 2.0"
        exports: ["org.kde.kirigami/PageRow 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Property { name: "lastItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "initialPage"; type: "QVariant" }
        Property { name: "defaultColumnWidth"; type: "int" }
        Property { name: "wideMode"; type: "bool"; isReadonly: true }
        Property { name: "leftSidebar"; type: "OverlayDrawer_QMLTYPE_77"; isPointer: true }
        Property { name: "popHiddenPages"; type: "bool" }
        Property { name: "depth"; type: "int"; isReadonly: true }
        Property { name: "currentItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "currentIndex"; type: "int" }
        Property { name: "columnView"; type: "ColumnView"; isReadonly: true; isPointer: true }
        Property { name: "items"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "visibleItems"; type: "QList<QObject*>"; isReadonly: true }
        Property { name: "firstVisibleItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "lastVisibleItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "interactive"; type: "bool" }
        Property { name: "separatorVisible"; type: "bool" }
        Property {
            name: "globalToolBar"
            type: "PageRowGlobalToolBarStyleGroup_QMLTYPE_80"
            isReadonly: true
            isPointer: true
        }
        Property { name: "layers"; type: "StackView_QMLTYPE_63"; isReadonly: true; isPointer: true }
        Signal {
            name: "pageInserted"
            Parameter { name: "position"; type: "int" }
            Parameter { name: "page"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "pagePushed"
            Parameter { name: "page"; type: "QQuickItem"; isPointer: true }
        }
        Signal {
            name: "pageRemoved"
            Parameter { name: "page"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "push"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
        }
        Method {
            name: "pushDialogLayer"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
            Parameter { name: "windowProperties"; type: "QVariant" }
        }
        Method {
            name: "insertPage"
            type: "QVariant"
            Parameter { name: "position"; type: "QVariant" }
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
        }
        Method {
            name: "movePage"
            type: "QVariant"
            Parameter { name: "fromPos"; type: "QVariant" }
            Parameter { name: "toPos"; type: "QVariant" }
        }
        Method {
            name: "removePage"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
        }
        Method {
            name: "pop"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
        }
        Method {
            name: "replace"
            type: "QVariant"
            Parameter { name: "page"; type: "QVariant" }
            Parameter { name: "properties"; type: "QVariant" }
        }
        Method { name: "clear"; type: "QVariant" }
        Method {
            name: "get"
            type: "QVariant"
            Parameter { name: "idx"; type: "QVariant" }
        }
        Method { name: "flickBack"; type: "QVariant" }
        Method {
            name: "goBack"
            type: "QVariant"
            Parameter { name: "event"; type: "QVariant" }
        }
        Method { name: "goForward"; type: "QVariant" }
    }
    Component {
        prototype: "QQuickTextField"
        name: "org.kde.kirigami/PasswordField 2.8"
        exports: ["org.kde.kirigami/PasswordField 2.8"]
        exportMetaObjectRevisions: [8]
        isComposite: true
        defaultProperty: "data"
        Property { name: "showPassword"; type: "bool" }
        Property { name: "leftActions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "rightActions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "focusSequence"; type: "QVariant" }
        Property { name: "_leftActionsRow"; type: "QQuickRow"; isReadonly: true; isPointer: true }
        Property { name: "_rightActionsRow"; type: "QQuickRow"; isReadonly: true; isPointer: true }
    }
    Component {
        prototype: "QQuickColumnLayout"
        name: "org.kde.kirigami/PlaceholderMessage 2.12"
        exports: ["org.kde.kirigami/PlaceholderMessage 2.12"]
        exportMetaObjectRevisions: [12]
        isComposite: true
        defaultProperty: "data"
        Enum {
            name: "Type"
            values: {
                "Actionable": 0,
                "Informational": 1
            }
        }
        Property { name: "type"; type: "int" }
        Property { name: "text"; type: "string" }
        Property { name: "explanation"; type: "string" }
        Property { name: "icon"; type: "ActionIconGroup_QMLTYPE_59"; isPointer: true }
        Property { name: "helpfulAction"; type: "QQuickAction"; isPointer: true }
    }
    Component {
        prototype: "QPlatformDialogHelper"
        name: "org.kde.kirigami/PromptDialog 2.19"
        exports: ["org.kde.kirigami/PromptDialog 2.19"]
        exportMetaObjectRevisions: [19]
        isComposite: true
        defaultProperty: "mainItem"
        Property { name: "subtitle"; type: "string" }
        Property { name: "contentPadding"; type: "double" }
        Property { name: "contentTopPadding"; type: "double" }
        Property { name: "contentBottomPadding"; type: "double" }
        Property { name: "contentLeftPadding"; type: "double" }
        Property { name: "contentRightPadding"; type: "double" }
        Property { name: "mainItem"; type: "QQuickItem"; isPointer: true }
        Property { name: "absoluteMaximumHeight"; type: "double"; isReadonly: true }
        Property { name: "absoluteMaximumWidth"; type: "double"; isReadonly: true }
        Property { name: "maximumHeight"; type: "double" }
        Property { name: "maximumWidth"; type: "double" }
        Property { name: "preferredHeight"; type: "double" }
        Property { name: "preferredWidth"; type: "double" }
        Property { name: "footerLeadingComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "footerTrailingComponent"; type: "QQmlComponent"; isPointer: true }
        Property { name: "showCloseButton"; type: "bool" }
        Property { name: "flatFooterButtons"; type: "bool" }
        Property { name: "customFooterActions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "dialogData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "dialogChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Method {
            name: "standardButton"
            type: "QQuickAbstractButton*"
            Parameter { name: "button"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickPage"
        name: "org.kde.kirigami/ScrollablePage 2.0"
        exports: ["org.kde.kirigami/ScrollablePage 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "scrollablePageData"
        Property { name: "refreshing"; type: "bool" }
        Property { name: "supportsRefreshing"; type: "bool" }
        Property { name: "flickable"; type: "QQuickFlickable"; isPointer: true }
        Property { name: "verticalScrollBarPolicy"; type: "int" }
        Property { name: "horizontalScrollBarPolicy"; type: "int" }
        Property { name: "mainItem"; type: "QObject"; isPointer: true }
        Property { name: "keyboardNavigationEnabled"; type: "bool" }
        Property { name: "scrollablePageData"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "scrollablePageChildren"; type: "QQuickItem"; isList: true; isReadonly: true }
        Property { name: "actions"; type: "Action_QMLTYPE_3"; isList: true; isReadonly: true }
        Property { name: "isCurrentPage"; type: "bool"; isReadonly: true }
        Property { name: "icon"; type: "ActionIconGroup_QMLTYPE_59"; isPointer: true }
        Property { name: "needsAttention"; type: "bool" }
        Property { name: "progress"; type: "QVariant" }
        Property { name: "titleDelegate"; type: "QQmlComponent"; isPointer: true }
        Property { name: "globalToolBarItem"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Property { name: "globalToolBarStyle"; type: "int" }
        Property { name: "overlay"; type: "QQuickItem"; isReadonly: true; isPointer: true }
        Signal { name: "contextualActionsAboutToShow" }
        Signal {
            name: "backRequested"
            Parameter { name: "event"; type: "QVariant" }
        }
    }
    Component {
        prototype: "QQuickTextField"
        name: "org.kde.kirigami/SearchField 2.8"
        exports: ["org.kde.kirigami/SearchField 2.8"]
        exportMetaObjectRevisions: [8]
        isComposite: true
        defaultProperty: "data"
        Property { name: "autoAccept"; type: "bool" }
        Property { name: "delaySearch"; type: "bool" }
        Property { name: "leftActions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "rightActions"; type: "QObject"; isList: true; isReadonly: true }
        Property { name: "focusSequence"; type: "QVariant" }
        Property { name: "_leftActionsRow"; type: "QQuickRow"; isReadonly: true; isPointer: true }
        Property { name: "_rightActionsRow"; type: "QQuickRow"; isReadonly: true; isPointer: true }
    }
    Component {
        prototype: "QQuickTextArea"
        name: "org.kde.kirigami/SelectableLabel 2.20"
        exports: ["org.kde.kirigami/SelectableLabel 2.20"]
        exportMetaObjectRevisions: [20]
        isComposite: true
        defaultProperty: "data"
        Property { name: "cursorShape"; type: "int" }
    }
    Component {
        prototype: "QQuickRectangle"
        name: "org.kde.kirigami/Separator 2.0"
        exports: ["org.kde.kirigami/Separator 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "data"
        Enum {
            name: "Weight"
            values: {
                "Light": 0,
                "Normal": 1
            }
        }
        Property { name: "weight"; type: "int" }
    }
    Component {
        prototype: "QQuickItem"
        name: "org.kde.kirigami/ShadowedImage 2.12"
        exports: ["org.kde.kirigami/ShadowedImage 2.12"]
        exportMetaObjectRevisions: [12]
        isComposite: true
        defaultProperty: "data"
        Property { name: "color"; type: "QColor" }
        Property { name: "radius"; type: "double" }
        Property { name: "shadow"; type: "ShadowGroup"; isReadonly: true; isPointer: true }
        Property { name: "border"; type: "BorderGroup"; isReadonly: true; isPointer: true }
        Property { name: "corners"; type: "CornersGroup"; isReadonly: true; isPointer: true }
        Property { name: "source"; type: "QUrl" }
        Property { name: "asynchronous"; type: "bool" }
        Property { name: "fillMode"; type: "int" }
        Property { name: "sourceSize"; type: "QSize" }
    }
    Component {
        prototype: "QQuickSwipeDelegate"
        name: "org.kde.kirigami/SwipeListItem 2.0"
        exports: ["org.kde.kirigami/SwipeListItem 2.0"]
        exportMetaObjectRevisions: [0]
        isComposite: true
        defaultProperty: "_default"
        Property { name: "alternatingBackground"; type: "bool" }
        Property { name: "sectionDelegate"; type: "bool" }
        Property { name: "separatorVisible"; type: "bool" }
        Property { name: "backgroundColor"; type: "QColor" }
        Property { name: "alternateBackgroundColor"; type: "QColor" }
        Property { name: "activeBackgroundColor"; type: "QColor" }
        Property { name: "textColor"; type: "QColor" }
        Property { name: "activeTextColor"; type: "QColor" }
        Property { name: "actionsVisible"; type: "bool"; isReadonly: true }
        Property { name: "alwaysVisibleActions"; type: "bool" }
        Property { name: "actions"; type: "Action_QMLTYPE_2"; isList: true; isReadonly: true }
        Property { name: "supportsMouseEvents"; type: "bool" }
        Property { name: "containsMouse"; type: "bool"; isReadonly: true }
        Property { name: "overlayWidth"; type: "double"; isReadonly: true }
        Property { name: "_default"; type: "QQuickItem"; isPointer: true }
    }
    Component {
        prototype: "QQuickLabel"
        name: "org.kde.kirigami/UrlButton 2.6"
        exports: ["org.kde.kirigami/UrlButton 2.6"]
        exportMetaObjectRevisions: [6]
        isComposite: true
        defaultProperty: "data"
        Property { name: "url"; type: "string" }
        Property { name: "action"; type: "Action_QMLTYPE_3"; isPointer: true }
        Property { name: "acceptedButtons"; type: "int" }
        Property { name: "mouseArea"; type: "QQuickMouseArea"; isReadonly: true; isPointer: true }
        Signal {
            name: "pressed"
            Parameter { name: "mouse"; type: "QVariant" }
        }
        Signal {
            name: "clicked"
            Parameter { name: "mouse"; type: "QVariant" }
        }
    }
}
